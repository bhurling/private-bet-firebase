service cloud.firestore {
  match /databases/{database}/documents {
    function isCurrentUser(userId) {
      return request.auth.uid == userId
    }

    function isAuthenticated() {
      return request.auth.uid != null
    }

    match /private_profiles {
      match /{userId} {
        allow read, write: if isCurrentUser(userId)
      }
    }

    match /public_profiles {
      match /{userId} {
        allow write: if isCurrentUser(userId)
        allow read: if isAuthenticated()
      }
    }

    match /devices {
      match /{userId} {
      	allow read, write: if isCurrentUser(userId)
      }
    }

    match /links {
      match /{userId}/outgoing/{otherUserId} {
        allow read: if isCurrentUser(userId)
        allow write: if isCurrentUser(userId) && !isCurrentUser(otherUserId)
      }

      match /{userId}/incoming/{otherUserId} {
        allow read: if isCurrentUser(userId)
        allow write: if isCurrentUser(otherUserId) && !isCurrentUser(userId)
      }

      match /{userId}/confirmed/{otherUserId} {
        function hasIncomingLink(from, to) {
          return get(/databases/$(database)/documents/links/$(to)/incoming/$(from)).data.linked == true
        }

        allow read: if isCurrentUser(userId)
        allow write: if (isCurrentUser(userId) && hasIncomingLink(otherUserId, userId))
          || (isCurrentUser(otherUserId) && hasIncomingLink(userId, otherUserId))
      }
    }

    match /feeds {
      match /{userId}/bets/{document=**} {
      	allow read: if isCurrentUser(userId)
      }
    }
  }
}
